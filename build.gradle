group 'eu.thijslemmens'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.11'
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.6.9"
    }
}

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: 'docker-compose'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.12.3'
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.6'
    compile group: 'com.typesafe.akka', name: 'akka-stream_2.12', version:'2.5.6'
    compile 'com.github.mauricio:postgresql-async_2.12:0.2.21'
    testCompile 'org.scalatest:scalatest_2.12:3.0.4'
    testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.12', version: '2.5.6'
    testCompile 'org.scalamock:scalamock_2.12:4.0.0'
    testCompile 'junit:junit:4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

mainClassName = 'eu.thijslemmens.carbonpostgres.Main'

import com.bmuschko.gradle.docker.tasks.image.*

task prepareDockerBuild(type: Copy){
    dependsOn installDist

    from 'src/main/docker'
    from installDist.destinationDir.parent
    into "$buildDir/docker"
}

task buildDockerImage(type: DockerBuildImage){
    dependsOn prepareDockerBuild
    inputDir = project.file("$buildDir/docker")
    buildArgs = ['PROJECT_NAME': installDist.destinationDir.name]
    doLast {
        project.extensions.getByName('dockerCompose').environment.put('DOCKER_IMAGE', imageId)
    }

}

dockerCompose {
    useComposeFiles = ['src/main/docker-compose/docker-compose.yml']
    projectName = project.name
}

composeUp.dependsOn(buildDockerImage)